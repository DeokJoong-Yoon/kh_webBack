<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.client.board.dao.BoardDao">

	<resultMap type="board" id="boardMap">
		<id column="b_num" property="boardNumber" />
		<result column="b_name" property="boardName" />
		<result column="b_title" property="boardTitle" />
		<result column="b_content" property="boardContent" />
		<result column="b_pwd" property="boardPasswd" />
		<result column="b_date" property="boardDate" />
		<result column="readcnt" property="readcnt" />
		<result column="replyCnt" property="replyCnt" />
		<result column="b_file" property="boardFile" />

	</resultMap>

	<!-- <select id="boardList" parameterType="board" resultMap="boardMap"> 
		SELECT b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date, readcnt 
		FROM spring_board ORDER BY b_num desc </select> -->

	<!-- 게시판 리스트 기본 조회 -->
	<!-- <select id="boardList" parameterType="board" resultMap="boardMap"> 
		SELECT b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date, readcnt 
		FROM spring_board <where> <if test="search == 'b_title'"> <![CDATA[ b_title 
		LIKE '%' || #{keyword} || '%' ]]> </if> <if test="search == 'b_content'"> 
		<![CDATA[ b_content LIKE '%' || #{keyword} || '%' ]]> </if> <if test="search 
		== 'b_name'"> <![CDATA[ b_name LIKE '%' || #{keyword} || '%' ]]> </if> </where> 
		ORDER BY b_num desc </select> -->

	<sql id="boardSearch">
		<if test="search == 'b_title'">
				<![CDATA[ b_title LIKE '%' || #{keyword} || '%' ]]>
		</if>
		<if test="search == 'b_content'">
				<![CDATA[ b_content LIKE '%' || #{keyword} || '%' ]]>
		</if>
		<if test="search == 'b_name'">
				<![CDATA[ b_name LIKE '%' || #{keyword} || '%' ]]>
		</if>
		<if test="search == 'b_date'">
				<![CDATA[ b_date LIKE '%' || #{keyword} || '%' ]]>
		</if>
	</sql>

	<!-- 게스트 리스트 검색 포함 조회 -->
	<!-- <select id="boardList" parameterType="board" resultMap="boardMap"> 
		SELECT b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date, readcnt, 
		b_file, (select count(r_num) from spring_reply where b_num = boardList.b_num) 
		as replyCnt FROM spring_board boardList <where> <include refid="boardSearch"></include> 
		</where> ORDER BY b_num desc </select> -->

	<!-- 전체 레코드 수 조회 -->
	<select id="boardListCnt" parameterType="board" resultType="int">
		SELECT count(*) FROM spring_board
		<trim prefix=" where (" suffix=")">
			<include refid="boardSearch"></include>
		</trim>
	</select>

	<!-- 게시판 리스트 조회(페이징 처리와 검색 처리) 밋 댓글 갯수 구하기 -->
	<!-- 힌트(hint) : 개발자가 데이터베이스에 어떤 방식으로 실행해 줘야 하는지를 명시하기 때문에 강제성을 부여한다. 구문 
		: /*+로 시작하고 */ 로 종료된다.. /*+ INDEX_DESC(테이블명 인덱스명[기본키 설정시 제약조건명으로 인덱스 자동 생성])*/ -->
	<!-- rownum : SQL이 실행된 결과에 넘버링해준다. -->
	<select id="boardList" parameterType="board"
		resultMap="boardMap"> 
		<![CDATA[
		SELECT
			b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date, readcnt, b_file, (select count(r_num) from spring_reply where b_num 
		= boardList.b_num) as r_cnt
		FROM (
			SELECT /*+ INDEX_DESC(spring_board spring_board_pk) */
			rownum as rnum, b_num, b_name, b_title, b_date, readcnt, b_file
			FROM spring_board 
		WHERE ]]>
		<trim prefix="(" suffix=") AND " prefixOverrides="AND">
			<include refid="boardSearch"></include>
		</trim>
		<![CDATA[ rownum <= #{pageNum} * #{amount} 
		) boardList WHERE rnum > (#{pageNum} - 1 ) * #{amount} ]]>
	</select>


	<!-- 게시물 등록 - 1 -->
	<insert id="boardInsert" parameterType="board"> INSERT INTO
		spring_board(b_num, b_name, b_title, b_content, b_pwd) VALUES
		(spring_board_seq.nextval,
		#{boardName}, #{boardTitle},
		#{boardContent}, #{boardPasswd})
	</insert>
	<!-- 게시물 등록 - 2 <insert id="boardInsert" parameterType="board"> /* Board 
		- boardInsert */ <selectKey keyProperty="boardNumber" resultType="int" order="BEFORE"> 
		select spring_board_seq.nextval from dual </selectKey> INSERT INTO spring_board(b_num, 
		b_name, b_title, b_content, b_pwd) VALUES(#{boardNumber}, #{boardName}, #{boardTitle}, 
		#{boardContent}, #{boardPasswd}) </insert> -->
	<!-- 게시물 등록 - 1(첨부파일 포함) -->
	<!-- <insert id="boardInsert" parameterType="board"> /* Board - boardInsert 
		*/ <selectKey keyProperty="boardNumber" resultType="int" order="BEFORE"> 
		select spring_board_seq.nextval from dual </selectKey> INSERT INTO spring_board(b_num, 
		b_name, b_title, b_content, b_pwd, b_file) VALUES(#{boardNumber}, #{boardName}, 
		#{boardTitle}, #{boardContent}, #{boardPasswd}, #{boardFile}) </insert> -->


	<update id="readCntUpdate" parameterType="board">
		<!-- Board - readCntUpdate -->
		UPDATE spring_board
		SET readcnt = readcnt + 1
		WHERE b_num =
		#{boardNumber}
	</update>

	<select id="boardDetail" parameterType="board"
		resultMap="boardMap">
		/* Board - boardDetail */
		SELECT
		b_num, b_name, b_title,
		b_content,
		TO_CHAR(b_date, 'YYYY-MM-DD HH24:MI:SS')
		AS b_date, readcnt
		FROM spring_board
		WHERE
		b_num = #{boardNumber}
	</select>
	<!-- <select id="boardDetail" parameterType="board" resultMap="boardMap"> 
		/* Board - boardDetail */ SELECT b_num, b_name, b_title, b_content, TO_CHAR(b_date, 
		'YYYY-MM-DD HH24:MI:SS') AS b_date, readcnt, b_file FROM spring_board WHERE 
		b_num = #{boardNumber} </select> -->

	<!-- 해당 번호의 비밀번호 확인 -->
	<select id="pwdConfirm" parameterType="board" resultType="int">
		/*
		Board -pwdConfirm */
		SELECT NVL((
		SELECT 1 FROM spring_board
		WHERE b_num
		= #{boardNumber} AND b_pwd = #{boardPasswd}
		), 0) as state
		FROM dual
	</select>

	<!-- 게시물 수정 -->
	<update id="boardUpdate" parameterType="board">
		/* Board - boardUpdate
		*/ UPDATE spring_board SET b_title =
		#{boardTitle}, b_content =
		#{boardContent},
		b_date = sysdate
		<if test="boardPasswd != ''"> , b_pwd = #{boardPasswd} </if>
		WHERE b_num = #{boardNumber}
	</update>
	<!-- 게시물 수정 - 첨부파일 포함 -->
	<!-- <update id="boardUpdate" parameterType="board"> /* Board - boardUpdate 
		*/ UPDATE spring_board SET b_title = #{boardTitle}, b_content = #{boardContent}, 
		b_date = sysdate <if test="boardPasswd != ''"> , b_pwd = #{boardPasswd} </if> 
		<if test="boardFile !=''"> , b_file = #{boardFile} </if> WHERE b_num = #{boardNumber} 
		</update> -->

	<delete id="boardDelete" parameterType="board">
		DELETE FROM
		spring_board
		WHERE
		b_num = #{boardNumber}
	</delete>


</mapper>